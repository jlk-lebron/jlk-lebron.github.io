(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{350:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"什么是-typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-typescript"}},[t._v("#")]),t._v(" 什么是 TypeScript")]),t._v(" "),s("blockquote",[s("p",[t._v("TypeScript is "),s("strong",[t._v("JavaScript with syntax for types.")]),t._v("(TypeScript 是带有类型语法的 JavaScript)")])]),t._v(" "),s("p",[t._v("TypeScript最终还是会编译成javascript运行")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.typescriptlang.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"类型系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型系统"}},[t._v("#")]),t._v(" 类型系统")]),t._v(" "),s("p",[t._v("从 TypeScript 的名字就可以看出来，「类型」是其最核心的特性。")]),t._v(" "),s("p",[t._v("我们知道，JavaScript 是一门非常灵活的编程语言：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("它没有类型约束，一个变量可能初始化时是字符串，过一会儿又被赋值为数字。")])]),t._v(" "),s("li",[s("p",[t._v("由于隐式类型转换的存在，有的变量的类型很难在运行前就确定。")])]),t._v(" "),s("li",[s("p",[t._v("基于原型的面向对象编程，使得原型上的属性或方法可以在运行时被修改。")])]),t._v(" "),s("li",[s("p",[t._v("函数是 JavaScript 中的一等公民，可以赋值给变量，也可以当作参数或返回值。")])])]),t._v(" "),s("p",[t._v("这种灵活性就像一把双刃剑，一方面使得 JavaScript 蓬勃发展，无所不能，从 2013 年开始就一直蝉联最普遍使用的编程语言排行榜冠军；另一方面也使得它的代码质量参差不齐，维护成本高，运行时错误多。")]),t._v(" "),s("p",[t._v("而 TypeScript 的类型系统，在很大程度上弥补了 JavaScript 的缺点。")]),t._v(" "),s("h3",{attrs:{id:"typescript-是静态类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-是静态类型"}},[t._v("#")]),t._v(" TypeScript 是静态类型")]),t._v(" "),s("p",[t._v("类型系统按照「类型检查的时机」来分类，可以分为动态类型和静态类型。")]),t._v(" "),s("p",[t._v("动态类型是指在运行时才会进行类型检查，这种语言的类型错误往往会导致运行时错误。JavaScript 是一门解释型语言，没有编译阶段，所以它是动态类型，以下这段代码在运行时才会报错：")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfoo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught TypeError: foo.split is not a function")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 运行时会报错（foo.split 不是一个函数），造成线上 bug")]),t._v("\n")])])]),s("p",[t._v("静态类型是指编译阶段就能确定每个变量的类型，这种语言的类型错误往往会导致语法错误。TypeScript 在运行前需要先编译为 JavaScript，而在编译阶段就会进行类型检查，所以 "),s("strong",[t._v("TypeScript 是静态类型")]),t._v("，这段 TypeScript 代码在编译阶段就会报错了：")]),t._v(" "),s("div",{staticClass:"language-Plain Text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("let foo = 1;\nfoo.split(' ');\n// Property 'split' does not exist on type 'number'.\n// 编译时会报错（数字没有 split 方法），无法通过编译\n")])])]),s("p",[t._v("你可能会奇怪，这段 TypeScript 代码看上去和 JavaScript 没有什么区别呀。")]),t._v(" "),s("p",[t._v("没错！大部分 JavaScript 代码都只需要经过少量的修改（或者完全不用修改）就变成 TypeScript 代码，这得益于 TypeScript 强大的"),s("code",[t._v("类型推论")]),t._v("，即使不去手动声明变量 "),s("code",[t._v("foo")]),t._v(" 的类型，也能在变量初始化时自动推论出它是一个 "),s("code",[t._v("number")]),t._v(" 类型。")]),t._v(" "),s("p",[t._v("完整的 TypeScript 代码是这样的：")]),t._v(" "),s("div",{staticClass:"language-Plain Text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("let foo: number = 1;\nfoo.split(' ');\n// Property 'split' does not exist on type 'number'.\n// 编译时会报错（数字没有 split 方法），无法通过编译\n")])])]),s("h1",{attrs:{id:"安装-typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-typescript"}},[t._v("#")]),t._v(" 安装 TypeScript")]),t._v(" "),s("p",[t._v("TypeScript 的命令行工具安装方法如下：")]),t._v(" "),s("div",{staticClass:"language-Plain Text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("npm install -g typescript\n")])])]),s("p",[t._v("以上命令会在全局环境下安装 "),s("code",[t._v("tsc")]),t._v(" 命令，安装完成之后，我们就可以在任何地方执行 "),s("code",[t._v("tsc")]),t._v(" 命令了。")]),t._v(" "),s("p",[t._v("编译一个 TypeScript 文件很简单：")]),t._v(" "),s("div",{staticClass:"language-Plain Text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("tsc hello.ts  编译指定文档\ntsc 编译当前路径下所有.ts文件\n")])])]),s("p",[t._v("我们约定使用 TypeScript 编写的文件以 "),s("code",[t._v(".ts")]),t._v(" 为后缀，用 TypeScript 编写 React 时，以 "),s("code",[t._v(".tsx")]),t._v(" 为后缀。")]),t._v(" "),s("h1",{attrs:{id:"hello-typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-typescript"}},[t._v("#")]),t._v(" Hello TypeScript")]),t._v(" "),s("p",[t._v("我们从一个简单的例子开始。")]),t._v(" "),s("p",[t._v("将以下代码复制到 "),s("code",[t._v("hello.ts")]),t._v(" 中：")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("person")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("然后执行")]),t._v(" "),s("div",{staticClass:"language-Plain Text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("tsc hello.ts\n")])])]),s("p",[t._v("这时候会生成一个编译好的文件 "),s("code",[t._v("hello.js")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在 TypeScript 中，我们使用 "),s("code",[t._v(":")]),t._v(" 指定变量的类型，"),s("code",[t._v(":")]),t._v(" 的前后有没有空格都可以。")]),t._v(" "),s("p",[t._v("上述例子中，我们用 "),s("code",[t._v(":")]),t._v(" 指定 "),s("code",[t._v("person")]),t._v(" 参数类型为 "),s("code",[t._v("string")]),t._v("。但是编译为 js 之后，并没有什么检查的代码被插入进来。")]),t._v(" "),s("p",[t._v("这是因为 "),s("strong",[t._v("TypeScript 只会在编译时对类型进行静态检查，如果发现有错误，编译的时候就会报错")]),t._v("。而在运行时，与普通的 JavaScript 文件一样，不会对类型进行检查。")]),t._v(" "),s("p",[t._v("如果我们需要保证运行时的参数类型，还是得手动对类型进行判断：")]),t._v(" "),s("div",{staticClass:"language-TypeScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'person is not a string'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("下面尝试把这段代码编译一下：")]),t._v(" "),s("div",{staticClass:"language-Plain Text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("function sayHello(person: string) {\n    return 'Hello, ' + person;\n}\n\nlet user = [0, 1, 2];\nconsole.log(sayHello(user));\n")])])]),s("p",[t._v("编辑器中会提示错误，编译的时候也会出错：")]),t._v(" "),s("div",{staticClass:"language-Plain Text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("hello.ts:6:22 - error TS2345: Argument of type 'number[]' is not assignable to parameter of type 'string'.\n")])])]),s("p",[t._v("但是还是生成了 js 文件：")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("person")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这是因为 "),s("strong",[t._v("TypeScript 编译的时候即使报错了，还是会生成编译结果")]),t._v("，我们仍然可以使用这个编译之后的文件。")]),t._v(" "),s("p",[t._v("如果要在报错的时候终止 js 文件的生成，可以在 "),s("code",[t._v("tsconfig.json")]),t._v(" 中配置 "),s("code",[t._v("noEmitOnError")]),t._v(" 即可。关于 "),s("code",[t._v("tsconfig.json")]),t._v("，请参阅"),s("a",{attrs:{href:"http://www.typescriptlang.org/docs/handbook/tsconfig-json.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方手册open in new window"),s("OutboundLink")],1),t._v("（"),s("a",{attrs:{href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/tsconfig.json.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("中文版open in new window"),s("OutboundLink")],1),t._v("）")]),t._v(" "),s("p",[t._v("注意: 运行tsc时不能指定文件,否则会忽略tsconfig.json")])])}),[],!1,null,null,null);s.default=e.exports}}]);