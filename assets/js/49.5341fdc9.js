(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{360:function(a,t,_){"use strict";_.r(t);var e=_(7),v=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://file+.vscode-resource.vscode-cdn.net/f%3A/vuepress/docs/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/#",title:"#",target:"_blank",rel:"noopener noreferrer"}},[a._v("Past"),t("OutboundLink")],1),a._v("本文主要考虑客户端性能、服务器端和网络性能，内容框架来自"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.yahoo.com%2Fperformance%2Frules.html%3Fguccounter%3D1",target:"_blank",rel:"noopener noreferrer"}},[a._v("Yahoo Developer Network"),t("OutboundLink")],1),a._v("，包含 7 个类别共 35 条前端性能优化最佳实践，在此基础上补充了一些相关或者更符合主流技术的内容。")]),a._v(" "),t("p",[a._v("本文主要考虑客户端性能、服务器端和网络性能，内容框架来自"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.yahoo.com%2Fperformance%2Frules.html%3Fguccounter%3D1",target:"_blank",rel:"noopener noreferrer"}},[a._v("Yahoo Developer Network"),t("OutboundLink")],1),a._v("，包含 7 个类别共 35 条前端性能优化最佳实践，在此基础上补充了一些相关或者更符合主流技术的内容。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://vvzf32vzrc5.feishu.cn/space/api/box/stream/download/asynccode/?code=MTNjM2YyMGIyZGEwMjdhY2UxNWEwYjUzN2MyZWY4OGZfdG1yb05XUlBKUFhKbHNETTI0SXh4WGlaYlcxMEJRTnBfVG9rZW46WWlaMGJZTzFMb3RwWE14cFJuNmNlc2NhbjlkXzE2OTA0NDU1OTE6MTY5MDQ0OTE5MV9WNA",alt:""}})]),a._v(" "),t("p",[a._v("前端性能的一个重要指标是页面加载时间，不仅事关用户体验，也是搜索引擎排名考虑的一个因素。")]),a._v(" "),t("ul",[t("li",[a._v("来自Google的数据表明，一个有10条数据0.4秒能加载完的页面，变成30条数据0.9秒加载完之后，流量和广告收入下降90%。")]),a._v(" "),t("li",[a._v("Google Map 首页文件大小从100KB减小到70-80KB后，流量在第一周涨了10%，接下来的三周涨了25%。")]),a._v(" "),t("li",[a._v("亚马逊的数据表明：加载时间增加100毫秒，销量就下降1%。")])]),a._v(" "),t("p",[a._v("以上数据更说明「加载时间就是金钱」，前端优化主要围绕提高加载速度进行。")]),a._v(" "),t("h1",{attrs:{id:"一、页面内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、页面内容"}},[a._v("#")]),a._v(" 一、页面内容")]),a._v(" "),t("h2",{attrs:{id:"_1-减少http请求数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少http请求数"}},[a._v("#")]),a._v(" （1）减少HTTP请求数")]),a._v(" "),t("p",[a._v("Web 前端 80% 的响应时间花在图片、样式、脚本等资源下载上。最直接的方式是减少页面所需资源，但并不现实。所以，减少HTTP请求数主要的途径是：")]),a._v(" "),t("blockquote",[t("p",[a._v("合并JS/CSS文件。服务器端（CDN）自动合并，基于Node.js的文件合并工具，通过把所有脚本放在一个文件中的方式来减少请求数。")]),a._v(" "),t("p",[a._v("使用"),t("strong",[a._v("CSS****Sprite")]),a._v("将背景图片合并成一个文件，通过 "),t("code",[a._v("background-image")]),a._v(" 和 "),t("code",[a._v("background-position")]),a._v(" 控制显示")]),a._v(" "),t("p",[t("strong",[a._v("行内图片")]),a._v("（Base64编码）。使用Data URI scheme将图片嵌入HTML或者CSS中；或者将CSS、JS、图片直接嵌入HTML中，会增加文件大小，也可能产生浏览器兼容及其他性能问题。")])]),a._v(" "),t("p",[a._v("减少页面的HTTP请求数是个起点，这是提升站点首次访问速度的重要指导原则。")]),a._v(" "),t("h2",{attrs:{id:"_2-减少dns查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-减少dns查询"}},[a._v("#")]),a._v(" （2）减少DNS查询")]),a._v(" "),t("p",[a._v("用户输入URL以后，浏览器首先要查询域名（hostname）对应服务器的IP地址，一般需要耗费20-120毫秒时间。DNS查询完成之前，浏览器无法从服务器下载任何数据。")]),a._v(" "),t("p",[a._v("基于性能考虑，ISP、局域网、操作系统、浏览器都会有相应的DNS缓存机制。")]),a._v(" "),t("ul",[t("li",[a._v("IE缓存30分钟，可以通过注册表中DnsCacheTimeout项设置；")]),a._v(" "),t("li",[a._v("Firefox缓存1分钟，通过network.dnsCacheExpiration配置；")])]),a._v(" "),t("p",[a._v("另外减少不同的主机名可减少DNS查找，减少不同主机名的数量同时也减少了页面能够并行下载的组件数量，避免DNS查找削减了响应时间，而减少并行下载数量却增加了响应时间。原则是把组件分散在2到4个主机名下，这是同时减少DNS查找和允许高并发下载的折中方案。")]),a._v(" "),t("h2",{attrs:{id:"_3-避免重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-避免重定向"}},[a._v("#")]),a._v(" （3）避免重定向")]),a._v(" "),t("p",[a._v("HTTP重定向通过 "),t("code",[a._v("301/302")]),a._v("状态码实现。下面是一个有301状态码的HTTP头")]),a._v(" "),t("div",{staticClass:"language-Apache extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("apache\n复制代码\nHTTP/1.1301 Moved Permanently  Location: http://example.com/newuri Content-Type: text/html\n")])])]),t("p",[a._v("浏览器会自动跳转到Location域指明的URL。重定向需要的所有信息都在HTTP头部，而响应体一般是空的。其实额外的HTTP头，比如Expires和Cache-Control也表示重定向。除此之外还有别的跳转方式：refresh元标签和JavaScript，但如果你必须得做重定向，最好用标准的3xxHTTP状态码，主要是为了让返回按钮能正常使用。")]),a._v(" "),t("p",[a._v("客户端收到服务器的重定向响应后，会根据响应头中Location的地址再次发送请求。重定向会影响用户体验，尤其是多次重定向时，用户在一段时间内看不到任何内容，只看到浏览器进度条一直在刷新。")]),a._v(" "),t("ul",[t("li",[a._v("最浪费的重定向经常发生、而且很容易被忽略：URL 末尾应该添加 "),t("code",[a._v("/")]),a._v("但未添加。比如，访问 "),t("code",[a._v("http://astrology.yahoo.com/astrology")]),a._v("将被 "),t("code",[a._v("301")]),a._v("重定向到 "),t("code",[a._v("http://astrology.yahoo.com/astrology/")]),a._v("（注意末尾的 /）。如果使用 Apache，可以通过Alias或mod_rewrite或DirectorySlash解决这个问题。")]),a._v(" "),t("li",[a._v("网站域名变更：CNAME结合Alias或mod_rewrite或者其他服务器类似功能实现跳转。")])]),a._v(" "),t("h2",{attrs:{id:"_4-缓存ajax请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-缓存ajax请求"}},[a._v("#")]),a._v(" （4）缓存Ajax请求")]),a._v(" "),t("p",[a._v("最重要的的优化方式是缓存响应结果。有尚未过期的Expires或者Cache-Control HTTP头，那么之前的资源就可以从缓存中读出。必须通知浏览器，应该继续使用之前缓存的资源响应，还是去请求一个新的。可以通过给资源的Ajax URL里添加一个表明用户资源最后修改时间的时间戳来实现。如果资源从上一次下载之后再没有被修改过，时间戳不变，资源就将从浏览器缓存中直接读出，从而避免一次额外的HTTP往返消耗。详见 "),t("code",[a._v("服务器-添加Expires或Cache响应头")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"_5-延迟加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-延迟加载"}},[a._v("#")]),a._v(" （5）延迟加载")]),a._v(" "),t("p",[a._v("页面初始加载时哪些内容是绝对必需的？不在答案之列的资源都可以延迟加载。比如：")]),a._v(" "),t("ul",[t("li",[a._v("非首屏使用的数据、样式、脚本、图片等；")]),a._v(" "),t("li",[a._v("用户交互时才会显示的内容。")])]),a._v(" "),t("p",[a._v("遵循「渐进增强」理念开发的网站：JavaScript用于增强用用户体验，但没有（不支持） JavaScript也能正常工作，完全可以延迟加载JavaScript。")]),a._v(" "),t("blockquote",[t("p",[a._v("将首屏以外的HTML放在不渲染的元素中，如隐藏的 "),t("code",[a._v("<textarea>")]),a._v("，或者type属性为非执行脚本的 "),t("code",[a._v("<script>")]),a._v("标签中，减少初始渲染的DOM元素数量，提高速度。等首屏加载完成或者用户操作时，再去渲染剩余的页面内容。")])]),a._v(" "),t("h2",{attrs:{id:"_6-预加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-预加载"}},[a._v("#")]),a._v(" （6）预加载")]),a._v(" "),t("p",[a._v("预先加载利用浏览器空闲时间请求将来要使用的资源，以便用户访问下一页面时更快地响应。")]),a._v(" "),t("ul",[t("li",[a._v("无条件预先加载：页面加载完成（load）后，马上获取其他资源。以 "),t("a",{attrs:{href:"https://link.juejin.cn/?target=http%3A%2F%2Fgoogle.com",target:"_blank",rel:"noopener noreferrer"}},[a._v("google.com"),t("OutboundLink")],1),a._v(" 为例，首页加载完成后会立即下载一个 Sprite 图片，此图首页不需要，但是搜索结果页要用到。")]),a._v(" "),t("li",[a._v("有条件预先加载：根据用户行为预判用户去向，预载相关资源。比如search.yahoo.com开始输入时会有额外的资源加载。Chrome 等浏览器的地址栏也有类似的机制。")]),a._v(" "),t("li",[a._v("有「阴谋」的预先加载：页面即将上线新版前预先加载新版内容。网站改版后由于缓存、使用习惯等原因，会有旧版的网站更快更流畅的反馈。为缓解这一问题，在新版上线之前，旧版可以利用空闲提前加载一些新版的资源缓存到客户端，以便新版正式上线后更快的载入。")])]),a._v(" "),t("h2",{attrs:{id:"_7-减少dom元素数量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-减少dom元素数量"}},[a._v("#")]),a._v(" （7）减少DOM元素数量")]),a._v(" "),t("p",[a._v("复杂的页面不仅下载的字节更多，JavaScript DOM操作也更慢。例如，同是添加一个事件处理器，500个元素和5000个元素的页面速度上会有很大区别。")]),a._v(" "),t("p",[a._v("从以下几个角度考虑移除不必要的标记：")]),a._v(" "),t("ul",[t("li",[a._v("是否还在使用表格布局？")]),a._v(" "),t("li",[a._v("塞进去更多的 "),t("code",[a._v("<div>")]),a._v("仅为了处理布局问题？也许有更好、更语义化的标记。")]),a._v(" "),t("li",[a._v("能通过伪元素实现的功能，就没必要添加额外元素，如清除浮动。")])]),a._v(" "),t("p",[a._v("浏览器控制台中输入以下代码可以计算出页面中有多少 DOM 元素：")]),a._v(" "),t("blockquote",[t("p",[a._v("document.getElementsByTagName('*').length;")])]),a._v(" "),t("p",[a._v("为什么不使用表格布局？")]),a._v(" "),t("ul",[t("li",[a._v("更多的标签，增加文件大小；")]),a._v(" "),t("li",[a._v("不易维护，无法适应响应式设计；")]),a._v(" "),t("li",[a._v("性能考量，默认的表格布局算法会产生大量重绘")])]),a._v(" "),t("h2",{attrs:{id:"_8-划分内容到不同域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-划分内容到不同域名"}},[a._v("#")]),a._v(" （8）划分内容到不同域名")]),a._v(" "),t("p",[a._v("浏览器一般会限制每个域的并行线程（一般为6个，甚至更少），使用不同的域名可以最大化下载线程，但注意保持在2-4个域名内，以避免DNS查询损耗。")]),a._v(" "),t("p",[a._v("例如，动态内容放在 "),t("code",[a._v("csspod.com")]),a._v("上，静态资源放在 "),t("code",[a._v("static.csspod.com")]),a._v("上。这样还可以禁用静态资源域下的Cookie，减少数据传输，详见 "),t("code",[a._v("Cookie 优化")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"_9-尽量减少iframe的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-尽量减少iframe的使用"}},[a._v("#")]),a._v(" （9）尽量减少iframe的使用")]),a._v(" "),t("p",[a._v("用iframe可以把一个HTML文档插入到父文档里，重要的是明白iframe是如何工作的并高效地使用它。")]),a._v(" "),t("p",[t("code",[a._v("<iframe>")]),a._v("的优点：")]),a._v(" "),t("ul",[t("li",[a._v("可以用来加载速度较慢的第三方资源，如广告、徽章；")]),a._v(" "),t("li",[a._v("可用作安全沙箱；")]),a._v(" "),t("li",[a._v("可以并行下载脚本。")])]),a._v(" "),t("p",[t("code",[a._v("<iframe>")]),a._v("的缺点：")]),a._v(" "),t("ul",[t("li",[a._v("加载代价昂贵，即使是空的页面；")]),a._v(" "),t("li",[a._v("阻塞页面 load 事件触发；")])]),a._v(" "),t("blockquote",[t("p",[a._v("Iframe 完全加载以后，父页面才会触发 load 事件。 Safari、Chrome 中通过 JavaScript 动态设置 iframe src 可以避免这个问题。")])]),a._v(" "),t("ul",[t("li",[a._v("缺乏语义。")])]),a._v(" "),t("h2",{attrs:{id:"_10-避免404错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-避免404错误"}},[a._v("#")]),a._v(" （10）避免404错误")]),a._v(" "),t("p",[a._v("HTTP请求很昂贵，返回无效的响应（如404未找到）完全没必要，降低用户体验而且毫无益处。 一些网站设计很酷炫、有提示信息的404页面，有助于提高用户体验，但还是浪费服务器资源。尤其糟糕的是外部脚本返回404，不仅阻塞其他资源下载，浏览器还会尝试把404页面内容当作JavaScript解析，消耗更多资源。")]),a._v(" "),t("h1",{attrs:{id:"二、服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、服务器"}},[a._v("#")]),a._v(" 二、服务器")]),a._v(" "),t("h2",{attrs:{id:"_1-使用cdn"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用cdn"}},[a._v("#")]),a._v(" （1）使用CDN")]),a._v(" "),t("p",[a._v("用户与服务器的物理距离对响应时间也有影响。把内容部署在多个地理位置分散的服务器上能让用户更快地载入页面。但具体要怎么做呢？")]),a._v(" "),t("p",[a._v("网站80-90%响应时间消耗在资源下载上，减少资源下载时间是性能优化的黄金法则。相比分布式架构的复杂和巨大投入，静态内容分发网络（CDN）可以以较低的投入，获得加载速度有效提升。")]),a._v(" "),t("p",[a._v("内容分发网络（CDN）是一组分散在不同地理位置的web服务器，用来给用户更高效地发送内容。典型地，选择用来发送内容的服务器是基于网络距离的衡量标准的。例如：选跳数（hop）最少的或者响应时间最快的服务器。")]),a._v(" "),t("h2",{attrs:{id:"_2-添加expires或cache-control响应头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加expires或cache-control响应头"}},[a._v("#")]),a._v(" （2）添加Expires或Cache-Control响应头")]),a._v(" "),t("ul",[t("li",[a._v("静态内容：将 Expires 响应头设置为将来很远的时间，实现「永不过期」策略；")]),a._v(" "),t("li",[a._v("动态内容：设置合适的 Cache-Control 响应头，让浏览器有条件地发起请求。")])]),a._v(" "),t("blockquote",[t("p",[a._v("Cache-Control头在HTTP/1.1规范中定义，取代了之前用来定义响应缓存策略的头（例如 Expires、Pragma）。当前的所有浏览器都支持Cache-Control，因此，使用它就够了。")])]),a._v(" "),t("h2",{attrs:{id:"_3-启用gzip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-启用gzip"}},[a._v("#")]),a._v(" （3）启用Gzip")]),a._v(" "),t("p",[a._v("前端工程师可以想办法明显地缩短通过网络传输HTTP请求和响应的时间。毫无疑问，终端用户的带宽速度，网络服务商，对等交换点的距离等等，都是开发团队所无法控制的。但还有别的能够影响响应时间的因素，压缩可以通过减少HTTP响应的大小来缩短响应时间。")]),a._v(" "),t("p",[a._v("Gzip压缩通常可以减少70%的响应大小，对某些文件更可能高达90%，比Deflate更高效。主流 Web 服务器都有相应模块，而且绝大多数浏览器支持gzip解码。所以，应该对HTML、CSS、JS、XML、JSON等文本类型的内容启用压缩。")]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("注意!!!")]),a._v(" 图片和 PDF 文件不要使用 gzip。它们本身已经压缩过，再使用 gzip 压缩不仅浪费 CPU 资源，而且还可能增加文件体积。")])]),a._v(" "),t("p",[a._v("从HTTP/1.1开始，"),t("strong",[a._v("web客户端")]),a._v("就有了支持压缩的Accept-Encoding HTTP请求头。")]),a._v(" "),t("blockquote",[t("p",[a._v("Accept-Encoding: gzip, deflate")])]),a._v(" "),t("p",[a._v("如果web服务器看到这个请求头，它就会用客户端列出的一种方式来压缩响应。"),t("strong",[a._v("web服务器")]),a._v("通过Content-Encoding响应头来通知客户端。")]),a._v(" "),t("blockquote",[t("p",[a._v("Content-Encoding: gzip")])]),a._v(" "),t("h2",{attrs:{id:"_4-配置-etag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置-etag"}},[a._v("#")]),a._v(" （4）配置 Etag")]),a._v(" "),t("p",[a._v("实体标签（ETags），是服务器和浏览器用来决定浏览器缓存中组件与源服务器中的组件是否匹配的一种机制（“实体”也就是组件：图片，脚本，样式表等等）。添加ETags可以提供一种实体验证机制，比最后修改日期更加灵活。一个ETag是一个字符串，作为一个组件某一具体版本的唯一标识符。唯一的格式约束是字符串必须用引号括起来，源服务器用相应头中的ETag来指定组件的ETag。")]),a._v(" "),t("div",{staticClass:"language-Apache extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('apache\n复制代码\nHTTP/1.1200 OK      Last-Modified: Tue, 12 Dec 200603:03:59 GMT      ETag: "10c24bc-4ab-457e1c1f"Content-Length: 12195\n')])])]),t("p",[a._v("然后，如果浏览器必须验证一个组件，它用If-None-Match请求头来把ETag传回源服务器。如果ETags匹配成功，会返回一个304状态码，这样就减少了12195个字节的响应体。Etag 通过文件版本标识，方便服务器判断请求的内容是否有更新，如果没有就响应 304，避免重新下载。")]),a._v(" "),t("div",{staticClass:"language-Apache extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('apache\n复制代码\nGET /i/yahoo.gif HTTP/1.1Host: us.yimg.com      If-Modified-Since: Tue, 12 Dec 200603:03:59 GMT      If-None-Match: "10c24bc-4ab-457e1c1f"HTTP/1.1304 Not Modified\n')])])]),t("h2",{attrs:{id:"_5-尽早输出-flush-缓冲"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-尽早输出-flush-缓冲"}},[a._v("#")]),a._v(" （5）尽早输出（flush）缓冲")]),a._v(" "),t("p",[a._v("用户请求页面时，服务器通常需要花费200 ~ 500毫秒来组合 HTML 页面。在此期间，浏览器处于空闲、等待数据状态。使用PHP中的flush()函数，可以发送部分已经准备好的 HTML到浏览器，以便服务器还在忙于处理剩余页面时，浏览器可以提前开始获取资源。")]),a._v(" "),t("p",[a._v("可以考虑在 "),t("code",[a._v("</head>")]),a._v("之后输出一次缓冲，HTML head一般比较容易生成，先发送以便浏览器开始获取 "),t("code",[a._v("<head>")]),a._v("里引用的CSS等资源。")]),a._v(" "),t("p",[a._v("Example:")]),a._v(" "),t("div",{staticClass:"language-Plain extra-class"},[t("pre",{pre:!0,attrs:{class:"language-plain"}},[t("code",[a._v("template\n复制代码\n\x3c!-- css, js --\x3e</head><?phpflush(); ?><body>\x3c!-- content --\x3e\n")])])]),t("h2",{attrs:{id:"_6-ajax请求使用get方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-ajax请求使用get方法"}},[a._v("#")]),a._v(" （6）Ajax请求使用GET方法")]),a._v(" "),t("p",[a._v("浏览器执行XMLHttpRequest POST请求时分成两步，先发送Http Header，再发送data。而GET只使用一个TCP数据包（Http Header与data）发送数据，所以首选GET方法。")]),a._v(" "),t("p",[a._v("根据HTTP规范，GET用于获取数据，POST则用于向服务器发送数据，所以Ajax请求数据时使用GET更符合规范。")]),a._v(" "),t("h2",{attrs:{id:"_7-避免图片src为空"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-避免图片src为空"}},[a._v("#")]),a._v(" （7）避免图片src为空")]),a._v(" "),t("p",[a._v("图片src属性值为空字符串可能以下面两种形式出现：")]),a._v(" "),t("p",[a._v("HTML:")]),a._v(" "),t("div",{staticClass:"language-Plain extra-class"},[t("pre",{pre:!0,attrs:{class:"language-plain"}},[t("code",[a._v('stylus\n复制代码\n<imgsrc="" />\n')])])]),t("p",[a._v("JavaScript：")]),a._v(" "),t("div",{staticClass:"language-Plain extra-class"},[t("pre",{pre:!0,attrs:{class:"language-plain"}},[t("code",[a._v('abnf\n复制代码\nvar img = new Image(); img.src = "";\n')])])]),t("p",[a._v("虽然src属性为空字符串，但浏览器仍然会向服务器发起一个HTTP请求：")]),a._v(" "),t("ul",[t("li",[a._v("IE 向页面所在的目录发送请求；")]),a._v(" "),t("li",[a._v("Safari、Chrome、Firefox向页面本身发送请求；")]),a._v(" "),t("li",[a._v("Opera不执行任何操作。")])]),a._v(" "),t("p",[a._v("空src产生请求的后果不容小觑：")]),a._v(" "),t("ul",[t("li",[a._v("给服务器造成意外的流量负担，尤其时日 PV 较大时；")]),a._v(" "),t("li",[a._v("浪费服务器计算资源；")]),a._v(" "),t("li",[a._v("可能产生报错。")])]),a._v(" "),t("blockquote",[t("p",[a._v("空的href属性也存在类似问题。用户点击空链接时，浏览器也会向服务器发送HTTP请求，可以通过JavaScript阻止空链接的默认的行为。")])]),a._v(" "),t("h1",{attrs:{id:"三、cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、cookie"}},[a._v("#")]),a._v(" 三、Cookie")]),a._v(" "),t("h2",{attrs:{id:"_1-减少-cookie-大小"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少-cookie-大小"}},[a._v("#")]),a._v(" （1）减少 Cookie 大小")]),a._v(" "),t("p",[a._v("Cookie被用于身份认证、个性化设置等诸多用途。Cookie通过HTTP头在服务器和浏览器间来回传送，减少Cookie大小可以降低其对响应速度的影响。")]),a._v(" "),t("ul",[t("li",[a._v("去除不必要的 Cookie；")]),a._v(" "),t("li",[a._v("尽量压缩 Cookie 大小；")]),a._v(" "),t("li",[a._v("注意设置 Cookie 的 domain 级别，如无必要，不要影响到 sub-domain；")]),a._v(" "),t("li",[a._v("设置合适的过期时间。")])]),a._v(" "),t("h2",{attrs:{id:"_2-静态资源使用无cookie域名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-静态资源使用无cookie域名"}},[a._v("#")]),a._v(" （2）静态资源使用无Cookie域名")]),a._v(" "),t("p",[a._v("静态资源一般无需使用Cookie，可以把它们放在使用二级域名或者专门域名的无Cookie服务器上，降低Cookie传送的造成的流量浪费，提高响应速度。")]),a._v(" "),t("h1",{attrs:{id:"四、css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、css"}},[a._v("#")]),a._v(" 四、CSS")]),a._v(" "),t("h2",{attrs:{id:"_1-把样式表放在-head-中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-把样式表放在-head-中"}},[a._v("#")]),a._v(" （1）把样式表放在 "),t("code",[a._v("<head>")]),a._v("中")]),a._v(" "),t("p",[a._v("把样式表放在 "),t("code",[a._v("<head>")]),a._v("中可以让页面渐进渲染，尽早呈现视觉反馈，给用户加载速度很快的感觉。")]),a._v(" "),t("p",[a._v("这对内容比较多的页面尤为重要，用户可以先查看已经下载渲染的内容，而不是盯着白屏等待。")]),a._v(" "),t("p",[a._v("如果把样式表放在页面底部，一些浏览器为减少重绘，会在 CSS 加载完成以后才渲染页面，用户只能对着白屏干瞪眼，用户体验极差。把样式表放到文档的HEAD部分能让页面看起来加载地更快。")]),a._v(" "),t("h2",{attrs:{id:"_2-不要使用css表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-不要使用css表达式"}},[a._v("#")]),a._v(" （2）不要使用CSS表达式")]),a._v(" "),t("p",[a._v("CSS表达式可以在CSS里执行JavaScript，仅IE5-IE7支持，IE8标准模式已经废弃。 CSS表达式超出预期的频繁执行，页面滚动、鼠标移动时都会不断执行，带来很大的性能损耗。")]),a._v(" "),t("h2",{attrs:{id:"_3-使用-link-替代-import"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-link-替代-import"}},[a._v("#")]),a._v(" （3）使用 "),t("code",[a._v("<link>")]),a._v("替代 "),t("code",[a._v("@import")])]),a._v(" "),t("p",[a._v("对于IE某些版本，@import的行为和放在页面底部一样。所以，不要用它。")]),a._v(" "),t("h2",{attrs:{id:"_4-不要使用-filter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-不要使用-filter"}},[a._v("#")]),a._v(" （4）不要使用 filter")]),a._v(" "),t("p",[a._v("AlphaImageLoader为IE5.5-IE8专有的技术，和CSS表达式一样，放进博物馆吧。IE专有的AlphaImageLoader滤镜可以用来修复IE7之前的版本中半透明PNG图片的问题。在图片加载过程中，这个滤镜会阻塞渲染，卡住浏览器，还会增加内存消耗而且是被应用到每个元素的，而不是每个图片，所以会存在一大堆问题。")]),a._v(" "),t("blockquote",[t("p",[a._v("注意！！！这里所说的不是 CSS3 Filter")])]),a._v(" "),t("h1",{attrs:{id:"五、javasript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、javasript"}},[a._v("#")]),a._v(" 五、Javasript")]),a._v(" "),t("h2",{attrs:{id:"_1-把脚本放在页面底部"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-把脚本放在页面底部"}},[a._v("#")]),a._v(" （1）把脚本放在页面底部")]),a._v(" "),t("p",[a._v("浏览器下载脚本时，会阻塞其他资源并行下载，即使是来自不同域名的资源。因此，最好将脚本放在底部，以提高页面加载速度。")]),a._v(" "),t("p",[a._v("一些特殊场景无法将脚本放到页面底部的，可以考虑 "),t("code",[a._v("<script>")]),a._v("的以下属性：")]),a._v(" "),t("ul",[t("li",[a._v("defer 属性；")]),a._v(" "),t("li",[a._v("HTML5 新增的async属性。")])]),a._v(" "),t("h2",{attrs:{id:"_2-使用外部javascript和css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用外部javascript和css"}},[a._v("#")]),a._v(" （2）使用外部JavaScript和CSS")]),a._v(" "),t("p",[a._v("外部JavaScript和CSS文件可以被浏览器缓存，在不同页面间重用，也能降低页面大小。")]),a._v(" "),t("p",[a._v("当然，实际中也需要考虑代码的重用程度。如果仅仅是某个页面使用到的代码，可以考虑内嵌在页面中，减少HTTP请求数。另外，可以在首页加载完成以后，预先加载子页面的资源。")]),a._v(" "),t("h2",{attrs:{id:"_3-压缩javascript和css"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-压缩javascript和css"}},[a._v("#")]),a._v(" （3）压缩JavaScript和CSS")]),a._v(" "),t("p",[a._v("压缩代码可以移除非功能性的字符（注释、空格、空行等），减少文件大小，提高载入速度。")]),a._v(" "),t("blockquote",[t("p",[a._v("得益于Node.js的流行，开源社区涌现出许多高效、易用的前端优化工具，JavaScript 和CSS压缩类的，不敢说多如牛毛，多入鸡毛倒是一点不夸张，如[UglifyJS 2] ("),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmishoo%2FUglifyJS2",target:"_blank",rel:"noopener noreferrer"}},[a._v("github.com/mishoo/Ugli…"),t("OutboundLink")],1),a._v(")、csso、cssnano 等。")]),a._v(" "),t("p",[a._v("对于内嵌的CSS和JavaScript，也可以通过htmlmin等工具压缩。")]),a._v(" "),t("p",[a._v("这些项目都有Gulp、Webpack等流行构建工具的配套版本。")])]),a._v(" "),t("h2",{attrs:{id:"_4-移除重复脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-移除重复脚本"}},[a._v("#")]),a._v(" （4）移除重复脚本")]),a._v(" "),t("p",[a._v("重复的脚本不仅产生不必要的HTTP请求，而且重复解析执行浪费时间和计算资源。")]),a._v(" "),t("h2",{attrs:{id:"_5-减少dom操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-减少dom操作"}},[a._v("#")]),a._v(" （5）减少DOM操作")]),a._v(" "),t("p",[a._v("JavaScript 操作 DOM 很慢，尤其是 DOM 节点很多时。")]),a._v(" "),t("p",[a._v("使用时应该注意：")]),a._v(" "),t("ul",[t("li",[a._v("缓存已经访问过的元素；")]),a._v(" "),t("li",[a._v("使用DocumentFragment暂存DOM，整理好以后再插入DOM树；")]),a._v(" "),t("li",[a._v("操作className，而不是多次读写style；")]),a._v(" "),t("li",[a._v("避免使用JavaScript修复布局。")])]),a._v(" "),t("h2",{attrs:{id:"_6-使用高效的事件处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-使用高效的事件处理"}},[a._v("#")]),a._v(" （6）使用高效的事件处理")]),a._v(" "),t("ul",[t("li",[a._v("减少绑定事件监听的节点，如通过事件委托；")]),a._v(" "),t("li",[a._v("尽早处理事件，在DOMContentLoaded即可进行，不用等到load以后。")])]),a._v(" "),t("h1",{attrs:{id:"六、图片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、图片"}},[a._v("#")]),a._v(" 六、图片")]),a._v(" "),t("h2",{attrs:{id:"_1-优化图片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-优化图片"}},[a._v("#")]),a._v(" （1）优化图片")]),a._v(" "),t("p",[a._v("尝试把GIF格式转换成PNG格式，看看是否节省空间。在所有的PNG图片上运行pngcrush（或者其它PNG优化工具）。")]),a._v(" "),t("blockquote",[t("p",[a._v("YDN"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.yahoo.com%2Fperformance%2Frules.html%23opt_images",target:"_blank",rel:"noopener noreferrer"}},[a._v("列出的相关工具"),t("OutboundLink")],1),a._v("缺乏易用性，建议参考以下工具")])]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fimagemin%2Fimagemin",target:"_blank",rel:"noopener noreferrer"}},[a._v("imagemin"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fimageoptim.com%2Fmac",target:"_blank",rel:"noopener noreferrer"}},[a._v("imageoptim.com"),t("OutboundLink")],1)])]),a._v(" "),t("blockquote",[t("p",[a._v("TODO:")])]),a._v(" "),t("ul",[t("li",[a._v("PNG 终极优化；")]),a._v(" "),t("li",[a._v("Webp 相关内容；")]),a._v(" "),t("li",[a._v("SVG 相关内容。")])]),a._v(" "),t("p",[a._v("PNG终极优化")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.queness.com%2Fpost%2F2507%2Fmost-effective-method-to-reduce-and-optimize-png-images",target:"_blank",rel:"noopener noreferrer"}},[a._v("Most Effective Method to Reduce and Optimize PNG Images"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.smashingmagazine.com%2F2009%2F07%2Fclever-png-optimization-techniques%2F",target:"_blank",rel:"noopener noreferrer"}},[a._v("Clever PNG Optimization Techniques"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"_2-优化css-sprite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-优化css-sprite"}},[a._v("#")]),a._v(" （2）优化CSS Sprite")]),a._v(" "),t("ul",[t("li",[a._v("水平排列Sprite中的图片，垂直排列会增加图片大小；")]),a._v(" "),t("li",[a._v("Spirite中把颜色较近的组合在一起可以降低颜色数，理想状况是低于256色以适用PNG8格式；")]),a._v(" "),t("li",[a._v("不要在Spirite的图像中间留有较大空隙。减少空隙虽然不太影响文件大小，但可以降低用户代理把图片解压为像素图的内存消耗，对移动设备更友好。")])]),a._v(" "),t("h2",{attrs:{id:"_3-不要在html中缩放图片"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-不要在html中缩放图片"}},[a._v("#")]),a._v(" （3）不要在HTML中缩放图片")]),a._v(" "),t("p",[a._v("不要使用 "),t("code",[a._v("<img>")]),a._v("的width、height缩放图片，如果用到小图片，就使用相应大小的图片。如果需要")]),a._v(" "),t("p",[t("code",[a._v('<img width="100" height="100" src="mycat.jpg" alt="My Cat" />')])]),a._v(" "),t("p",[a._v("那么图片本身（mycat.jpg）应该是100x100px的，而不是去缩小500x500px的图片。")]),a._v(" "),t("blockquote",[t("p",[a._v("很多 CMS 和 CDN 都提供图片裁切功能。")])]),a._v(" "),t("p",[t("strong",[a._v("补充")]),a._v(" ：设置图片的宽和高，以免浏览器按照「猜」的宽高给图片保留的区域和实际宽高差异，产生重绘。")]),a._v(" "),t("h2",{attrs:{id:"_4-使用体积小、可缓存的favicon-ico"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用体积小、可缓存的favicon-ico"}},[a._v("#")]),a._v(" （4）使用体积小、可缓存的favicon.ico")]),a._v(" "),t("p",[a._v("Favicon.ico一般存放在网站根目录下，无论是否在页面中设置，浏览器都会尝试请求这个文件。")]),a._v(" "),t("p",[a._v("所以确保这个图标：")]),a._v(" "),t("ul",[t("li",[a._v("存在（避免 404）；")]),a._v(" "),t("li",[a._v("尽量小，最好小于 1K；")]),a._v(" "),t("li",[a._v("设置较长的过期时间。")])]),a._v(" "),t("blockquote",[t("p",[a._v("对于较新的浏览器，可以使用PNG格式的favicon。")])]),a._v(" "),t("h1",{attrs:{id:"七、移动端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、移动端"}},[a._v("#")]),a._v(" 七、移动端")]),a._v(" "),t("h2",{attrs:{id:"_1-保证所有组件都小于25k"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-保证所有组件都小于25k"}},[a._v("#")]),a._v(" （1）保证所有组件都小于25K")]),a._v(" "),t("p",[a._v("这个限制是因为iPhone不能缓存大于25K的组件，注意这里指的是未压缩的大小。这就是为什么缩减内容本身也很重要，因为单纯的gzip可能不够。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.yahoo.com%2Fperformance%2Frules.html%23under25",target:"_blank",rel:"noopener noreferrer"}},[a._v("保证所有组件都小于25K"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"_2-打包内容为分段-multipart-文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-打包内容为分段-multipart-文档"}},[a._v("#")]),a._v(" （2）打包内容为分段（multipart）文档")]),a._v(" "),t("p",[a._v("把各个组件打包成一个像有附件的电子邮件一样的复合文档里，可以用一个HTTP请求获取多个组件（记住一点：HTTP请求是代价高昂的）。用这种方式的时候，要先检查用户代理是否支持（iPhone就不支持）。")]),a._v(" "),t("h1",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("p",[a._v("写到这里，雅虎的35条军规算是介绍完了。条目虽然很多，但经过分类，可以发现，性能优化主要切入点可以从以下几个方面去考虑：")]),a._v(" "),t("ul",[t("li",[a._v("资源本身大小的压缩优化（想办法减少资源的体积）")]),a._v(" "),t("li",[a._v("网络请求的全过程（从url地址栏输入发送请求开始到返回响应包的每个环节）")]),a._v(" "),t("li",[a._v("浏览器渲染的全过程（拿到资源后浏览器渲染的每个环节）")])]),a._v(" "),t("p",[a._v("因此，要彻底掌握优化的方法，必须对http请求的全过程以及浏览器的渲染全过程都有深入的理解。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/jlk-lebron/blog-img@main/PicGo/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.webp",alt:""}})]),a._v(" "),t("p",[a._v("前端性能的一个重要指标是页面加载时间，不仅事关用户体验，也是搜索引擎排名考虑的一个因素。")]),a._v(" "),t("ul",[t("li",[a._v("来自Google的数据表明，一个有10条数据0.4秒能加载完的页面，变成30条数据0.9秒加载完之后，流量和广告收入下降90%。")]),a._v(" "),t("li",[a._v("Google Map 首页文件大小从100KB减小到70-80KB后，流量在第一周涨了10%，接下来的三周涨了25%。")]),a._v(" "),t("li",[a._v("亚马逊的数据表明：加载时间增加100毫秒，销量就下降1%。")])]),a._v(" "),t("p",[a._v("以上数据更说明「加载时间就是金钱」，前端优化主要围绕提高加载速度进行。")]),a._v(" "),t("h1",{attrs:{id:"一、页面内容-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、页面内容-2"}},[a._v("#")]),a._v(" 一、页面内容")]),a._v(" "),t("h2",{attrs:{id:"_1-减少http请求数-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少http请求数-2"}},[a._v("#")]),a._v(" （1）减少HTTP请求数")]),a._v(" "),t("p",[a._v("Web 前端 80% 的响应时间花在图片、样式、脚本等资源下载上。最直接的方式是减少页面所需资源，但并不现实。所以，减少HTTP请求数主要的途径是：")]),a._v(" "),t("blockquote",[t("p",[a._v("合并JS/CSS文件。服务器端（CDN）自动合并，基于Node.js的文件合并工具，通过把所有脚本放在一个文件中的方式来减少请求数。")]),a._v(" "),t("p",[a._v("使用"),t("strong",[a._v("CSS****Sprite")]),a._v("将背景图片合并成一个文件，通过 "),t("code",[a._v("background-image")]),a._v(" 和 "),t("code",[a._v("background-position")]),a._v(" 控制显示")]),a._v(" "),t("p",[t("strong",[a._v("行内图片")]),a._v("（Base64编码）。使用Data URI scheme将图片嵌入HTML或者CSS中；或者将CSS、JS、图片直接嵌入HTML中，会增加文件大小，也可能产生浏览器兼容及其他性能问题。")])]),a._v(" "),t("p",[a._v("减少页面的HTTP请求数是个起点，这是提升站点首次访问速度的重要指导原则。")]),a._v(" "),t("h2",{attrs:{id:"_2-减少dns查询-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-减少dns查询-2"}},[a._v("#")]),a._v(" （2）减少DNS查询")]),a._v(" "),t("p",[a._v("用户输入URL以后，浏览器首先要查询域名（hostname）对应服务器的IP地址，一般需要耗费20-120毫秒时间。DNS查询完成之前，浏览器无法从服务器下载任何数据。")]),a._v(" "),t("p",[a._v("基于性能考虑，ISP、局域网、操作系统、浏览器都会有相应的DNS缓存机制。")]),a._v(" "),t("ul",[t("li",[a._v("IE缓存30分钟，可以通过注册表中DnsCacheTimeout项设置；")]),a._v(" "),t("li",[a._v("Firefox缓存1分钟，通过network.dnsCacheExpiration配置；")])]),a._v(" "),t("p",[a._v("另外减少不同的主机名可减少DNS查找，减少不同主机名的数量同时也减少了页面能够并行下载的组件数量，避免DNS查找削减了响应时间，而减少并行下载数量却增加了响应时间。原则是把组件分散在2到4个主机名下，这是同时减少DNS查找和允许高并发下载的折中方案。")]),a._v(" "),t("h2",{attrs:{id:"_3-避免重定向-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-避免重定向-2"}},[a._v("#")]),a._v(" （3）避免重定向")]),a._v(" "),t("p",[a._v("HTTP重定向通过 "),t("code",[a._v("301/302")]),a._v("状态码实现。下面是一个有301状态码的HTTP头")]),a._v(" "),t("div",{staticClass:"language-Apache extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("apache\n复制代码\nHTTP/1.1301 Moved Permanently  Location: http://example.com/newuri Content-Type: text/html\n")])])]),t("p",[a._v("浏览器会自动跳转到Location域指明的URL。重定向需要的所有信息都在HTTP头部，而响应体一般是空的。其实额外的HTTP头，比如Expires和Cache-Control也表示重定向。除此之外还有别的跳转方式：refresh元标签和JavaScript，但如果你必须得做重定向，最好用标准的3xxHTTP状态码，主要是为了让返回按钮能正常使用。")]),a._v(" "),t("p",[a._v("客户端收到服务器的重定向响应后，会根据响应头中Location的地址再次发送请求。重定向会影响用户体验，尤其是多次重定向时，用户在一段时间内看不到任何内容，只看到浏览器进度条一直在刷新。")]),a._v(" "),t("ul",[t("li",[a._v("最浪费的重定向经常发生、而且很容易被忽略：URL 末尾应该添加 "),t("code",[a._v("/")]),a._v("但未添加。比如，访问 "),t("code",[a._v("http://astrology.yahoo.com/astrology")]),a._v("将被 "),t("code",[a._v("301")]),a._v("重定向到 "),t("code",[a._v("http://astrology.yahoo.com/astrology/")]),a._v("（注意末尾的 /）。如果使用 Apache，可以通过Alias或mod_rewrite或DirectorySlash解决这个问题。")]),a._v(" "),t("li",[a._v("网站域名变更：CNAME结合Alias或mod_rewrite或者其他服务器类似功能实现跳转。")])]),a._v(" "),t("h2",{attrs:{id:"_4-缓存ajax请求-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-缓存ajax请求-2"}},[a._v("#")]),a._v(" （4）缓存Ajax请求")]),a._v(" "),t("p",[a._v("最重要的的优化方式是缓存响应结果。有尚未过期的Expires或者Cache-Control HTTP头，那么之前的资源就可以从缓存中读出。必须通知浏览器，应该继续使用之前缓存的资源响应，还是去请求一个新的。可以通过给资源的Ajax URL里添加一个表明用户资源最后修改时间的时间戳来实现。如果资源从上一次下载之后再没有被修改过，时间戳不变，资源就将从浏览器缓存中直接读出，从而避免一次额外的HTTP往返消耗。详见 "),t("code",[a._v("服务器-添加Expires或Cache响应头")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"_5-延迟加载-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-延迟加载-2"}},[a._v("#")]),a._v(" （5）延迟加载")]),a._v(" "),t("p",[a._v("页面初始加载时哪些内容是绝对必需的？不在答案之列的资源都可以延迟加载。比如：")]),a._v(" "),t("ul",[t("li",[a._v("非首屏使用的数据、样式、脚本、图片等；")]),a._v(" "),t("li",[a._v("用户交互时才会显示的内容。")])]),a._v(" "),t("p",[a._v("遵循「渐进增强」理念开发的网站：JavaScript用于增强用用户体验，但没有（不支持） JavaScript也能正常工作，完全可以延迟加载JavaScript。")]),a._v(" "),t("blockquote",[t("p",[a._v("将首屏以外的HTML放在不渲染的元素中，如隐藏的 "),t("code",[a._v("<textarea>")]),a._v("，或者type属性为非执行脚本的 "),t("code",[a._v("<script>")]),a._v("标签中，减少初始渲染的DOM元素数量，提高速度。等首屏加载完成或者用户操作时，再去渲染剩余的页面内容。")])]),a._v(" "),t("h2",{attrs:{id:"_6-预加载-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-预加载-2"}},[a._v("#")]),a._v(" （6）预加载")]),a._v(" "),t("p",[a._v("预先加载利用浏览器空闲时间请求将来要使用的资源，以便用户访问下一页面时更快地响应。")]),a._v(" "),t("ul",[t("li",[a._v("无条件预先加载：页面加载完成（load）后，马上获取其他资源。以 "),t("a",{attrs:{href:"https://link.juejin.cn/?target=http%3A%2F%2Fgoogle.com",target:"_blank",rel:"noopener noreferrer"}},[a._v("google.com"),t("OutboundLink")],1),a._v(" 为例，首页加载完成后会立即下载一个 Sprite 图片，此图首页不需要，但是搜索结果页要用到。")]),a._v(" "),t("li",[a._v("有条件预先加载：根据用户行为预判用户去向，预载相关资源。比如search.yahoo.com开始输入时会有额外的资源加载。Chrome 等浏览器的地址栏也有类似的机制。")]),a._v(" "),t("li",[a._v("有「阴谋」的预先加载：页面即将上线新版前预先加载新版内容。网站改版后由于缓存、使用习惯等原因，会有旧版的网站更快更流畅的反馈。为缓解这一问题，在新版上线之前，旧版可以利用空闲提前加载一些新版的资源缓存到客户端，以便新版正式上线后更快的载入。")])]),a._v(" "),t("h2",{attrs:{id:"_7-减少dom元素数量-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-减少dom元素数量-2"}},[a._v("#")]),a._v(" （7）减少DOM元素数量")]),a._v(" "),t("p",[a._v("复杂的页面不仅下载的字节更多，JavaScript DOM操作也更慢。例如，同是添加一个事件处理器，500个元素和5000个元素的页面速度上会有很大区别。")]),a._v(" "),t("p",[a._v("从以下几个角度考虑移除不必要的标记：")]),a._v(" "),t("ul",[t("li",[a._v("是否还在使用表格布局？")]),a._v(" "),t("li",[a._v("塞进去更多的 "),t("code",[a._v("<div>")]),a._v("仅为了处理布局问题？也许有更好、更语义化的标记。")]),a._v(" "),t("li",[a._v("能通过伪元素实现的功能，就没必要添加额外元素，如清除浮动。")])]),a._v(" "),t("p",[a._v("浏览器控制台中输入以下代码可以计算出页面中有多少 DOM 元素：")]),a._v(" "),t("blockquote",[t("p",[a._v("document.getElementsByTagName('*').length;")])]),a._v(" "),t("p",[a._v("为什么不使用表格布局？")]),a._v(" "),t("ul",[t("li",[a._v("更多的标签，增加文件大小；")]),a._v(" "),t("li",[a._v("不易维护，无法适应响应式设计；")]),a._v(" "),t("li",[a._v("性能考量，默认的表格布局算法会产生大量重绘")])]),a._v(" "),t("h2",{attrs:{id:"_8-划分内容到不同域名-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-划分内容到不同域名-2"}},[a._v("#")]),a._v(" （8）划分内容到不同域名")]),a._v(" "),t("p",[a._v("浏览器一般会限制每个域的并行线程（一般为6个，甚至更少），使用不同的域名可以最大化下载线程，但注意保持在2-4个域名内，以避免DNS查询损耗。")]),a._v(" "),t("p",[a._v("例如，动态内容放在 "),t("code",[a._v("csspod.com")]),a._v("上，静态资源放在 "),t("code",[a._v("static.csspod.com")]),a._v("上。这样还可以禁用静态资源域下的Cookie，减少数据传输，详见 "),t("code",[a._v("Cookie 优化")]),a._v("。")]),a._v(" "),t("h2",{attrs:{id:"_9-尽量减少iframe的使用-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-尽量减少iframe的使用-2"}},[a._v("#")]),a._v(" （9）尽量减少iframe的使用")]),a._v(" "),t("p",[a._v("用iframe可以把一个HTML文档插入到父文档里，重要的是明白iframe是如何工作的并高效地使用它。")]),a._v(" "),t("p",[t("code",[a._v("<iframe>")]),a._v("的优点：")]),a._v(" "),t("ul",[t("li",[a._v("可以用来加载速度较慢的第三方资源，如广告、徽章；")]),a._v(" "),t("li",[a._v("可用作安全沙箱；")]),a._v(" "),t("li",[a._v("可以并行下载脚本。")])]),a._v(" "),t("p",[t("code",[a._v("<iframe>")]),a._v("的缺点：")]),a._v(" "),t("ul",[t("li",[a._v("加载代价昂贵，即使是空的页面；")]),a._v(" "),t("li",[a._v("阻塞页面 load 事件触发；")])]),a._v(" "),t("blockquote",[t("p",[a._v("Iframe 完全加载以后，父页面才会触发 load 事件。 Safari、Chrome 中通过 JavaScript 动态设置 iframe src 可以避免这个问题。")])]),a._v(" "),t("ul",[t("li",[a._v("缺乏语义。")])]),a._v(" "),t("h2",{attrs:{id:"_10-避免404错误-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-避免404错误-2"}},[a._v("#")]),a._v(" （10）避免404错误")]),a._v(" "),t("p",[a._v("HTTP请求很昂贵，返回无效的响应（如404未找到）完全没必要，降低用户体验而且毫无益处。 一些网站设计很酷炫、有提示信息的404页面，有助于提高用户体验，但还是浪费服务器资源。尤其糟糕的是外部脚本返回404，不仅阻塞其他资源下载，浏览器还会尝试把404页面内容当作JavaScript解析，消耗更多资源。")]),a._v(" "),t("h1",{attrs:{id:"二、服务器-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、服务器-2"}},[a._v("#")]),a._v(" 二、服务器")]),a._v(" "),t("h2",{attrs:{id:"_1-使用cdn-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用cdn-2"}},[a._v("#")]),a._v(" （1）使用CDN")]),a._v(" "),t("p",[a._v("用户与服务器的物理距离对响应时间也有影响。把内容部署在多个地理位置分散的服务器上能让用户更快地载入页面。但具体要怎么做呢？")]),a._v(" "),t("p",[a._v("网站80-90%响应时间消耗在资源下载上，减少资源下载时间是性能优化的黄金法则。相比分布式架构的复杂和巨大投入，静态内容分发网络（CDN）可以以较低的投入，获得加载速度有效提升。")]),a._v(" "),t("p",[a._v("内容分发网络（CDN）是一组分散在不同地理位置的web服务器，用来给用户更高效地发送内容。典型地，选择用来发送内容的服务器是基于网络距离的衡量标准的。例如：选跳数（hop）最少的或者响应时间最快的服务器。")]),a._v(" "),t("h2",{attrs:{id:"_2-添加expires或cache-control响应头-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加expires或cache-control响应头-2"}},[a._v("#")]),a._v(" （2）添加Expires或Cache-Control响应头")]),a._v(" "),t("ul",[t("li",[a._v("静态内容：将 Expires 响应头设置为将来很远的时间，实现「永不过期」策略；")]),a._v(" "),t("li",[a._v("动态内容：设置合适的 Cache-Control 响应头，让浏览器有条件地发起请求。")])]),a._v(" "),t("blockquote",[t("p",[a._v("Cache-Control头在HTTP/1.1规范中定义，取代了之前用来定义响应缓存策略的头（例如 Expires、Pragma）。当前的所有浏览器都支持Cache-Control，因此，使用它就够了。")])]),a._v(" "),t("h2",{attrs:{id:"_3-启用gzip-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-启用gzip-2"}},[a._v("#")]),a._v(" （3）启用Gzip")]),a._v(" "),t("p",[a._v("前端工程师可以想办法明显地缩短通过网络传输HTTP请求和响应的时间。毫无疑问，终端用户的带宽速度，网络服务商，对等交换点的距离等等，都是开发团队所无法控制的。但还有别的能够影响响应时间的因素，压缩可以通过减少HTTP响应的大小来缩短响应时间。")]),a._v(" "),t("p",[a._v("Gzip压缩通常可以减少70%的响应大小，对某些文件更可能高达90%，比Deflate更高效。主流 Web 服务器都有相应模块，而且绝大多数浏览器支持gzip解码。所以，应该对HTML、CSS、JS、XML、JSON等文本类型的内容启用压缩。")]),a._v(" "),t("blockquote",[t("p",[t("strong",[a._v("注意!!!")]),a._v(" 图片和 PDF 文件不要使用 gzip。它们本身已经压缩过，再使用 gzip 压缩不仅浪费 CPU 资源，而且还可能增加文件体积。")])]),a._v(" "),t("p",[a._v("从HTTP/1.1开始，"),t("strong",[a._v("web客户端")]),a._v("就有了支持压缩的Accept-Encoding HTTP请求头。")]),a._v(" "),t("blockquote",[t("p",[a._v("Accept-Encoding: gzip, deflate")])]),a._v(" "),t("p",[a._v("如果web服务器看到这个请求头，它就会用客户端列出的一种方式来压缩响应。"),t("strong",[a._v("web服务器")]),a._v("通过Content-Encoding响应头来通知客户端。")]),a._v(" "),t("blockquote",[t("p",[a._v("Content-Encoding: gzip")])]),a._v(" "),t("h2",{attrs:{id:"_4-配置-etag-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置-etag-2"}},[a._v("#")]),a._v(" （4）配置 Etag")]),a._v(" "),t("p",[a._v("实体标签（ETags），是服务器和浏览器用来决定浏览器缓存中组件与源服务器中的组件是否匹配的一种机制（“实体”也就是组件：图片，脚本，样式表等等）。添加ETags可以提供一种实体验证机制，比最后修改日期更加灵活。一个ETag是一个字符串，作为一个组件某一具体版本的唯一标识符。唯一的格式约束是字符串必须用引号括起来，源服务器用相应头中的ETag来指定组件的ETag。")]),a._v(" "),t("div",{staticClass:"language-Apache extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('apache\n复制代码\nHTTP/1.1200 OK      Last-Modified: Tue, 12 Dec 200603:03:59 GMT      ETag: "10c24bc-4ab-457e1c1f"Content-Length: 12195\n')])])]),t("p",[a._v("然后，如果浏览器必须验证一个组件，它用If-None-Match请求头来把ETag传回源服务器。如果ETags匹配成功，会返回一个304状态码，这样就减少了12195个字节的响应体。Etag 通过文件版本标识，方便服务器判断请求的内容是否有更新，如果没有就响应 304，避免重新下载。")]),a._v(" "),t("div",{staticClass:"language-Apache extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('apache\n复制代码\nGET /i/yahoo.gif HTTP/1.1Host: us.yimg.com      If-Modified-Since: Tue, 12 Dec 200603:03:59 GMT      If-None-Match: "10c24bc-4ab-457e1c1f"HTTP/1.1304 Not Modified\n')])])]),t("h2",{attrs:{id:"_5-尽早输出-flush-缓冲-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-尽早输出-flush-缓冲-2"}},[a._v("#")]),a._v(" （5）尽早输出（flush）缓冲")]),a._v(" "),t("p",[a._v("用户请求页面时，服务器通常需要花费200 ~ 500毫秒来组合 HTML 页面。在此期间，浏览器处于空闲、等待数据状态。使用PHP中的flush()函数，可以发送部分已经准备好的 HTML到浏览器，以便服务器还在忙于处理剩余页面时，浏览器可以提前开始获取资源。")]),a._v(" "),t("p",[a._v("可以考虑在 "),t("code",[a._v("</head>")]),a._v("之后输出一次缓冲，HTML head一般比较容易生成，先发送以便浏览器开始获取 "),t("code",[a._v("<head>")]),a._v("里引用的CSS等资源。")]),a._v(" "),t("p",[a._v("Example:")]),a._v(" "),t("div",{staticClass:"language-Plain extra-class"},[t("pre",{pre:!0,attrs:{class:"language-plain"}},[t("code",[a._v("template\n复制代码\n\x3c!-- css, js --\x3e</head><?phpflush(); ?><body>\x3c!-- content --\x3e\n")])])]),t("h2",{attrs:{id:"_6-ajax请求使用get方法-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-ajax请求使用get方法-2"}},[a._v("#")]),a._v(" （6）Ajax请求使用GET方法")]),a._v(" "),t("p",[a._v("浏览器执行XMLHttpRequest POST请求时分成两步，先发送Http Header，再发送data。而GET只使用一个TCP数据包（Http Header与data）发送数据，所以首选GET方法。")]),a._v(" "),t("p",[a._v("根据HTTP规范，GET用于获取数据，POST则用于向服务器发送数据，所以Ajax请求数据时使用GET更符合规范。")]),a._v(" "),t("h2",{attrs:{id:"_7-避免图片src为空-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-避免图片src为空-2"}},[a._v("#")]),a._v(" （7）避免图片src为空")]),a._v(" "),t("p",[a._v("图片src属性值为空字符串可能以下面两种形式出现：")]),a._v(" "),t("p",[a._v("HTML:")]),a._v(" "),t("div",{staticClass:"language-Plain extra-class"},[t("pre",{pre:!0,attrs:{class:"language-plain"}},[t("code",[a._v('stylus\n复制代码\n<imgsrc="" />\n')])])]),t("p",[a._v("JavaScript：")]),a._v(" "),t("div",{staticClass:"language-Plain extra-class"},[t("pre",{pre:!0,attrs:{class:"language-plain"}},[t("code",[a._v('abnf\n复制代码\nvar img = new Image(); img.src = "";\n')])])]),t("p",[a._v("虽然src属性为空字符串，但浏览器仍然会向服务器发起一个HTTP请求：")]),a._v(" "),t("ul",[t("li",[a._v("IE 向页面所在的目录发送请求；")]),a._v(" "),t("li",[a._v("Safari、Chrome、Firefox向页面本身发送请求；")]),a._v(" "),t("li",[a._v("Opera不执行任何操作。")])]),a._v(" "),t("p",[a._v("空src产生请求的后果不容小觑：")]),a._v(" "),t("ul",[t("li",[a._v("给服务器造成意外的流量负担，尤其时日 PV 较大时；")]),a._v(" "),t("li",[a._v("浪费服务器计算资源；")]),a._v(" "),t("li",[a._v("可能产生报错。")])]),a._v(" "),t("blockquote",[t("p",[a._v("空的href属性也存在类似问题。用户点击空链接时，浏览器也会向服务器发送HTTP请求，可以通过JavaScript阻止空链接的默认的行为。")])]),a._v(" "),t("h1",{attrs:{id:"三、cookie-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、cookie-2"}},[a._v("#")]),a._v(" 三、Cookie")]),a._v(" "),t("h2",{attrs:{id:"_1-减少-cookie-大小-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-减少-cookie-大小-2"}},[a._v("#")]),a._v(" （1）减少 Cookie 大小")]),a._v(" "),t("p",[a._v("Cookie被用于身份认证、个性化设置等诸多用途。Cookie通过HTTP头在服务器和浏览器间来回传送，减少Cookie大小可以降低其对响应速度的影响。")]),a._v(" "),t("ul",[t("li",[a._v("去除不必要的 Cookie；")]),a._v(" "),t("li",[a._v("尽量压缩 Cookie 大小；")]),a._v(" "),t("li",[a._v("注意设置 Cookie 的 domain 级别，如无必要，不要影响到 sub-domain；")]),a._v(" "),t("li",[a._v("设置合适的过期时间。")])]),a._v(" "),t("h2",{attrs:{id:"_2-静态资源使用无cookie域名-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-静态资源使用无cookie域名-2"}},[a._v("#")]),a._v(" （2）静态资源使用无Cookie域名")]),a._v(" "),t("p",[a._v("静态资源一般无需使用Cookie，可以把它们放在使用二级域名或者专门域名的无Cookie服务器上，降低Cookie传送的造成的流量浪费，提高响应速度。")]),a._v(" "),t("h1",{attrs:{id:"四、css-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、css-2"}},[a._v("#")]),a._v(" 四、CSS")]),a._v(" "),t("h2",{attrs:{id:"_1-把样式表放在-head-中-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-把样式表放在-head-中-2"}},[a._v("#")]),a._v(" （1）把样式表放在 "),t("code",[a._v("<head>")]),a._v("中")]),a._v(" "),t("p",[a._v("把样式表放在 "),t("code",[a._v("<head>")]),a._v("中可以让页面渐进渲染，尽早呈现视觉反馈，给用户加载速度很快的感觉。")]),a._v(" "),t("p",[a._v("这对内容比较多的页面尤为重要，用户可以先查看已经下载渲染的内容，而不是盯着白屏等待。")]),a._v(" "),t("p",[a._v("如果把样式表放在页面底部，一些浏览器为减少重绘，会在 CSS 加载完成以后才渲染页面，用户只能对着白屏干瞪眼，用户体验极差。把样式表放到文档的HEAD部分能让页面看起来加载地更快。")]),a._v(" "),t("h2",{attrs:{id:"_2-不要使用css表达式-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-不要使用css表达式-2"}},[a._v("#")]),a._v(" （2）不要使用CSS表达式")]),a._v(" "),t("p",[a._v("CSS表达式可以在CSS里执行JavaScript，仅IE5-IE7支持，IE8标准模式已经废弃。 CSS表达式超出预期的频繁执行，页面滚动、鼠标移动时都会不断执行，带来很大的性能损耗。")]),a._v(" "),t("h2",{attrs:{id:"_3-使用-link-替代-import-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-link-替代-import-2"}},[a._v("#")]),a._v(" （3）使用 "),t("code",[a._v("<link>")]),a._v("替代 "),t("code",[a._v("@import")])]),a._v(" "),t("p",[a._v("对于IE某些版本，@import的行为和放在页面底部一样。所以，不要用它。")]),a._v(" "),t("h2",{attrs:{id:"_4-不要使用-filter-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-不要使用-filter-2"}},[a._v("#")]),a._v(" （4）不要使用 filter")]),a._v(" "),t("p",[a._v("AlphaImageLoader为IE5.5-IE8专有的技术，和CSS表达式一样，放进博物馆吧。IE专有的AlphaImageLoader滤镜可以用来修复IE7之前的版本中半透明PNG图片的问题。在图片加载过程中，这个滤镜会阻塞渲染，卡住浏览器，还会增加内存消耗而且是被应用到每个元素的，而不是每个图片，所以会存在一大堆问题。")]),a._v(" "),t("blockquote",[t("p",[a._v("注意！！！这里所说的不是 CSS3 Filter")])]),a._v(" "),t("h1",{attrs:{id:"五、javasript-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、javasript-2"}},[a._v("#")]),a._v(" 五、Javasript")]),a._v(" "),t("h2",{attrs:{id:"_1-把脚本放在页面底部-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-把脚本放在页面底部-2"}},[a._v("#")]),a._v(" （1）把脚本放在页面底部")]),a._v(" "),t("p",[a._v("浏览器下载脚本时，会阻塞其他资源并行下载，即使是来自不同域名的资源。因此，最好将脚本放在底部，以提高页面加载速度。")]),a._v(" "),t("p",[a._v("一些特殊场景无法将脚本放到页面底部的，可以考虑 "),t("code",[a._v("<script>")]),a._v("的以下属性：")]),a._v(" "),t("ul",[t("li",[a._v("defer 属性；")]),a._v(" "),t("li",[a._v("HTML5 新增的async属性。")])]),a._v(" "),t("h2",{attrs:{id:"_2-使用外部javascript和css-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用外部javascript和css-2"}},[a._v("#")]),a._v(" （2）使用外部JavaScript和CSS")]),a._v(" "),t("p",[a._v("外部JavaScript和CSS文件可以被浏览器缓存，在不同页面间重用，也能降低页面大小。")]),a._v(" "),t("p",[a._v("当然，实际中也需要考虑代码的重用程度。如果仅仅是某个页面使用到的代码，可以考虑内嵌在页面中，减少HTTP请求数。另外，可以在首页加载完成以后，预先加载子页面的资源。")]),a._v(" "),t("h2",{attrs:{id:"_3-压缩javascript和css-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-压缩javascript和css-2"}},[a._v("#")]),a._v(" （3）压缩JavaScript和CSS")]),a._v(" "),t("p",[a._v("压缩代码可以移除非功能性的字符（注释、空格、空行等），减少文件大小，提高载入速度。")]),a._v(" "),t("blockquote",[t("p",[a._v("得益于Node.js的流行，开源社区涌现出许多高效、易用的前端优化工具，JavaScript 和CSS压缩类的，不敢说多如牛毛，多入鸡毛倒是一点不夸张，如[UglifyJS 2] ("),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fmishoo%2FUglifyJS2",target:"_blank",rel:"noopener noreferrer"}},[a._v("github.com/mishoo/Ugli…"),t("OutboundLink")],1),a._v(")、csso、cssnano 等。")]),a._v(" "),t("p",[a._v("对于内嵌的CSS和JavaScript，也可以通过htmlmin等工具压缩。")]),a._v(" "),t("p",[a._v("这些项目都有Gulp、Webpack等流行构建工具的配套版本。")])]),a._v(" "),t("h2",{attrs:{id:"_4-移除重复脚本-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-移除重复脚本-2"}},[a._v("#")]),a._v(" （4）移除重复脚本")]),a._v(" "),t("p",[a._v("重复的脚本不仅产生不必要的HTTP请求，而且重复解析执行浪费时间和计算资源。")]),a._v(" "),t("h2",{attrs:{id:"_5-减少dom操作-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-减少dom操作-2"}},[a._v("#")]),a._v(" （5）减少DOM操作")]),a._v(" "),t("p",[a._v("JavaScript 操作 DOM 很慢，尤其是 DOM 节点很多时。")]),a._v(" "),t("p",[a._v("使用时应该注意：")]),a._v(" "),t("ul",[t("li",[a._v("缓存已经访问过的元素；")]),a._v(" "),t("li",[a._v("使用DocumentFragment暂存DOM，整理好以后再插入DOM树；")]),a._v(" "),t("li",[a._v("操作className，而不是多次读写style；")]),a._v(" "),t("li",[a._v("避免使用JavaScript修复布局。")])]),a._v(" "),t("h2",{attrs:{id:"_6-使用高效的事件处理-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-使用高效的事件处理-2"}},[a._v("#")]),a._v(" （6）使用高效的事件处理")]),a._v(" "),t("ul",[t("li",[a._v("减少绑定事件监听的节点，如通过事件委托；")]),a._v(" "),t("li",[a._v("尽早处理事件，在DOMContentLoaded即可进行，不用等到load以后。")])]),a._v(" "),t("h1",{attrs:{id:"六、图片-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、图片-2"}},[a._v("#")]),a._v(" 六、图片")]),a._v(" "),t("h2",{attrs:{id:"_1-优化图片-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-优化图片-2"}},[a._v("#")]),a._v(" （1）优化图片")]),a._v(" "),t("p",[a._v("尝试把GIF格式转换成PNG格式，看看是否节省空间。在所有的PNG图片上运行pngcrush（或者其它PNG优化工具）。")]),a._v(" "),t("blockquote",[t("p",[a._v("YDN"),t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.yahoo.com%2Fperformance%2Frules.html%23opt_images",target:"_blank",rel:"noopener noreferrer"}},[a._v("列出的相关工具"),t("OutboundLink")],1),a._v("缺乏易用性，建议参考以下工具")])]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fimagemin%2Fimagemin",target:"_blank",rel:"noopener noreferrer"}},[a._v("imagemin"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fimageoptim.com%2Fmac",target:"_blank",rel:"noopener noreferrer"}},[a._v("imageoptim.com"),t("OutboundLink")],1)])]),a._v(" "),t("blockquote",[t("p",[a._v("TODO:")])]),a._v(" "),t("ul",[t("li",[a._v("PNG 终极优化；")]),a._v(" "),t("li",[a._v("Webp 相关内容；")]),a._v(" "),t("li",[a._v("SVG 相关内容。")])]),a._v(" "),t("p",[a._v("PNG终极优化")]),a._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.queness.com%2Fpost%2F2507%2Fmost-effective-method-to-reduce-and-optimize-png-images",target:"_blank",rel:"noopener noreferrer"}},[a._v("Most Effective Method to Reduce and Optimize PNG Images"),t("OutboundLink")],1)]),a._v(" "),t("li",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fwww.smashingmagazine.com%2F2009%2F07%2Fclever-png-optimization-techniques%2F",target:"_blank",rel:"noopener noreferrer"}},[a._v("Clever PNG Optimization Techniques"),t("OutboundLink")],1)])]),a._v(" "),t("h2",{attrs:{id:"_2-优化css-sprite-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-优化css-sprite-2"}},[a._v("#")]),a._v(" （2）优化CSS Sprite")]),a._v(" "),t("ul",[t("li",[a._v("水平排列Sprite中的图片，垂直排列会增加图片大小；")]),a._v(" "),t("li",[a._v("Spirite中把颜色较近的组合在一起可以降低颜色数，理想状况是低于256色以适用PNG8格式；")]),a._v(" "),t("li",[a._v("不要在Spirite的图像中间留有较大空隙。减少空隙虽然不太影响文件大小，但可以降低用户代理把图片解压为像素图的内存消耗，对移动设备更友好。")])]),a._v(" "),t("h2",{attrs:{id:"_3-不要在html中缩放图片-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-不要在html中缩放图片-2"}},[a._v("#")]),a._v(" （3）不要在HTML中缩放图片")]),a._v(" "),t("p",[a._v("不要使用 "),t("code",[a._v("<img>")]),a._v("的width、height缩放图片，如果用到小图片，就使用相应大小的图片。如果需要")]),a._v(" "),t("p",[t("code",[a._v('<img width="100" height="100" src="mycat.jpg" alt="My Cat" />')])]),a._v(" "),t("p",[a._v("那么图片本身（mycat.jpg）应该是100x100px的，而不是去缩小500x500px的图片。")]),a._v(" "),t("blockquote",[t("p",[a._v("很多 CMS 和 CDN 都提供图片裁切功能。")])]),a._v(" "),t("p",[t("strong",[a._v("补充")]),a._v(" ：设置图片的宽和高，以免浏览器按照「猜」的宽高给图片保留的区域和实际宽高差异，产生重绘。")]),a._v(" "),t("h2",{attrs:{id:"_4-使用体积小、可缓存的favicon-ico-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用体积小、可缓存的favicon-ico-2"}},[a._v("#")]),a._v(" （4）使用体积小、可缓存的favicon.ico")]),a._v(" "),t("p",[a._v("Favicon.ico一般存放在网站根目录下，无论是否在页面中设置，浏览器都会尝试请求这个文件。")]),a._v(" "),t("p",[a._v("所以确保这个图标：")]),a._v(" "),t("ul",[t("li",[a._v("存在（避免 404）；")]),a._v(" "),t("li",[a._v("尽量小，最好小于 1K；")]),a._v(" "),t("li",[a._v("设置较长的过期时间。")])]),a._v(" "),t("blockquote",[t("p",[a._v("对于较新的浏览器，可以使用PNG格式的favicon。")])]),a._v(" "),t("h1",{attrs:{id:"七、移动端-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、移动端-2"}},[a._v("#")]),a._v(" 七、移动端")]),a._v(" "),t("h2",{attrs:{id:"_1-保证所有组件都小于25k-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-保证所有组件都小于25k-2"}},[a._v("#")]),a._v(" （1）保证所有组件都小于25K")]),a._v(" "),t("p",[a._v("这个限制是因为iPhone不能缓存大于25K的组件，注意这里指的是未压缩的大小。这就是为什么缩减内容本身也很重要，因为单纯的gzip可能不够。")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fdeveloper.yahoo.com%2Fperformance%2Frules.html%23under25",target:"_blank",rel:"noopener noreferrer"}},[a._v("保证所有组件都小于25K"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"_2-打包内容为分段-multipart-文档-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-打包内容为分段-multipart-文档-2"}},[a._v("#")]),a._v(" （2）打包内容为分段（multipart）文档")]),a._v(" "),t("p",[a._v("把各个组件打包成一个像有附件的电子邮件一样的复合文档里，可以用一个HTTP请求获取多个组件（记住一点：HTTP请求是代价高昂的）。用这种方式的时候，要先检查用户代理是否支持（iPhone就不支持）。")]),a._v(" "),t("h1",{attrs:{id:"总结-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("p",[a._v("写到这里，雅虎的35条军规算是介绍完了。条目虽然很多，但经过分类，可以发现，性能优化主要切入点可以从以下几个方面去考虑：")]),a._v(" "),t("ul",[t("li",[a._v("资源本身大小的压缩优化（想办法减少资源的体积）")]),a._v(" "),t("li",[a._v("网络请求的全过程（从url地址栏输入发送请求开始到返回响应包的每个环节）")]),a._v(" "),t("li",[a._v("浏览器渲染的全过程（拿到资源后浏览器渲染的每个环节）")])]),a._v(" "),t("p",[a._v("因此，要彻底掌握优化的方法，必须对http请求的全过程以及浏览器的渲染全过程都有深入的理解。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://cdn.staticaly.com/gh/jlk-lebron/blog-img@main/PicGo/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.webp",alt:""}})])])}),[],!1,null,null,null);t.default=v.exports}}]);