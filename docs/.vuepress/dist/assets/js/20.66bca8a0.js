(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{331:function(t,a,s){"use strict";s.r(a);var r=s(7),o=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"什么是跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是跨域"}},[t._v("#")]),t._v(" 什么是跨域？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("违反了浏览器的同源策略,就称为跨域")])]),t._v(" "),a("li",[a("p",[t._v("什么是同源策略?")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果两个 URL 的 protocol(协议名)、host(主机地址) 和  port (端口号)都相同的话，则这两个 URL 是同源")])]),t._v(" "),a("li",[a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("对比例子"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("两个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v("的协议名不相同"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以不同源\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" ftp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home\n\n对比例子"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("两个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v("的协议名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("域名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("端口号都相同"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以同源\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("about"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xiaoming\n\n   "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("扩展")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("完整的路径由"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("部分组成"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("协议名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("域名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("端口号"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("查询字符串")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("由路由路径和参数组成"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n对比例子"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("两个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v("的端口号不相同"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("所以不同源\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home\n")])])])]),t._v(" "),a("li",[a("p",[t._v("问题:为什么要有同源策略?")]),t._v(" "),a("ol",[a("li",[t._v("假设协议名不相同不会出现跨域问题,那么网页可以通过ftp等协议,直接读取用户电脑的本地文件,在通过http将这些文件的内容全部发送至服务器(相当于扫描用户电脑)")]),t._v(" "),a("li",[t._v("假设主机地址不相同不会出现跨域问题,后续简称真网站为A,假网站为B,用户无意中访问了B网站,此时B网站的html文件使用ajax携带cookie发送请求给A网站,A网站识别cookie之后,返回用户相关数据给B网站的html文件,最终B网站的html文件使用ajax将得到的数据发送给B网站的服务器(这个过程中A网站和用户都受到了一定程度的损失,获利者只有B)")])])])])])]),t._v(" "),a("h3",{attrs:{id:"跨域一定会报错吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域一定会报错吗"}},[t._v("#")]),t._v(" 跨域一定会报错吗?")]),t._v(" "),a("ol",[a("li",[t._v("不一定")]),t._v(" "),a("li",[t._v("服务器之间不存在跨域报错")]),t._v(" "),a("li",[t._v("img/script/link/video/audio等标签都不会报跨域错误")]),t._v(" "),a("li",[a("strong",[t._v("小总结")]),t._v(":"),a("strong",[t._v("跨域是个动作,跨域报错是问题,并没有直接的联系,只是在部分情况下有可能出现")])])]),t._v(" "),a("h3",{attrs:{id:"什么情况下会出现跨域问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么情况下会出现跨域问题"}},[t._v("#")]),t._v(" 什么情况下会出现跨域问题？")]),t._v(" "),a("ol",[a("li",[t._v("在浏览器中才有可能出现跨域问题")]),t._v(" "),a("li",[t._v("只有发送ajax请求才有可能会出现跨域问题")]),t._v(" "),a("li",[a("strong",[t._v("小总结:跨域报错是浏览器搞的鬼")])])]),t._v(" "),a("h3",{attrs:{id:"哪些请求算是ajax请求-ajax-async-javascript-and-xml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#哪些请求算是ajax请求-ajax-async-javascript-and-xml"}},[t._v("#")]),t._v(" 哪些请求算是ajax请求(ajax->async javascript and xml)？")]),t._v(" "),a("ol",[a("li",[t._v("简单说法:发送一个ajax请求")]),t._v(" "),a("li",[t._v("完整说法:使用ajax发送一个http请求")]),t._v(" "),a("li",[a("strong",[t._v("只有通过js代码才可能发送ajax请求")])]),t._v(" "),a("li",[t._v("不属于ajax的举例:\n"),a("ol",[a("li",[t._v("在地址栏中填写地址进行跳转")]),t._v(" "),a("li",[t._v("使用标签配合地址进行跳转,例如:img")]),t._v(" "),a("li",[a("strong",[t._v("小总结:没有用上ajax的都是http请求")])])])]),t._v(" "),a("li",[a("strong",[t._v("小总结:ajax并不是一种特殊的请求,他是一种发送http请求的技术")])])]),t._v(" "),a("h3",{attrs:{id:"跨域问题解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨域问题解决方案"}},[t._v("#")]),t._v(" 跨域问题解决方案？")]),t._v(" "),a("ol",[a("li",[t._v("jsonp\n"),a("ol",[a("li",[t._v("原理:实际上是利用了script标签跨域请求不会报错这点来实现的")]),t._v(" "),a("li",[t._v("流程:\n"),a("ol",[a("li",[t._v("前端网页创建存储数据的变量data和接收数据的函数getData")]),t._v(" "),a("li",[t._v("在用户点击按钮时,将函数的名称拼接成字符串")]),t._v(" "),a("li",[t._v("通过创建的script标签,添加src,将刚才的字符串作为src使用,可以实现请求服务器的效果")]),t._v(" "),a("li",[t._v("服务器被请求之后,根据前端传来的函数名称进行字符串拼接")]),t._v(" "),a("li",[t._v("服务器拼接结束之后,将文本内容返回给前端")]),t._v(" "),a("li",[t._v("script标签接收到返回的文本,自动作为js代码执行")]),t._v(" "),a("li",[t._v("最终getData函数被调用,同时获取到了服务器返回的数据,并保存到了data变量中")])])])])]),t._v(" "),a("li",[t._v("CORS(跨源资源共享)\n"),a("ol",[a("li",[t._v("原理:跨域问题是在返回响应的时候才会报的错误")]),t._v(" "),a("li",[t._v("流程:\n"),a("ol",[a("li",[t._v("浏览器中的网页请求服务器,此时并没有任何问题")]),t._v(" "),a("li",[t._v("服务器返回响应的时候,需要告知浏览器,愿意被该网页进行请求\n"),a("ol",[a("li",[t._v('服务器会在响应头中配置Access-Control-Allow-Origin: "http://www.baidu.com"')])])]),t._v(" "),a("li",[t._v("浏览器获取到之后,就不会报跨域错误")])])])])]),t._v(" "),a("li",[t._v("proxy")])])])}),[],!1,null,null,null);a.default=o.exports}}]);